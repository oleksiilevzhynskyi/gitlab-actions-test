on:
  push:
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset

jobs:
  build:
    # There is not a way to run workflow on push tag on specfic branch.
    # The job should be skipped when running for a non-master branch
    if: github.event.base_ref == 'refs/heads/main'
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
      - name: Branch name
        id: branch_name
        run: |
          echo ::set-output name=TARBALL::grammarly-focal-${GITHUB_REF#refs/tags/}.tgz
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          yarn pack --filename ${{ steps.branch_name.outputs.TARBALL }}
          ls -alh
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./${{ steps.branch_name.outputs.TARBALL }}
          asset_name: ${{ steps.branch_name.outputs.TARBALL }}
          asset_content_type: application/zip
